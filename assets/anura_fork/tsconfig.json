{
    "compilerOptions": {
        "module": "none",
        // project options
        "lib": ["ESNext", "dom"], // specifies which default set of type definitions to use ("DOM", "ES6", etc)
        "outDir": "build/lib", // .js (as well as .d.ts, .js.map, etc.) files will be emitted into this directory.,
        "removeComments": false, // Strips all comments from TypeScript files when converting into JavaScript- you rarely read compiled code so this saves space
        "target": "ESNext", // Target environment. Most modern browsers support ES6, but you may want to set it to newer or older. (defaults to ES3)

        // Module resolution
        // "baseUrl": "./src", // Lets you set a base directory to resolve non-absolute module names.
        "esModuleInterop": true, // fixes some issues TS originally had with the ES6 spec where TypeScript treats CommonJS/AMD/UMD modules similar to ES6 module
        "moduleResolution": "classic", // Pretty much always node for modern JS. Other option is "classic"
        // "paths": {"s":["./public/build/*.js"]}, // A series of entries which re-map imports to lookup locations relative to the baseUrl

        // Source Map
        "sourceMap": true, // enables the use of source maps for debuggers and error reporting etc
        "sourceRoot": "/artifacts", // Specify the location where a debugger should locate TypeScript files instead of relative source locations.

        // Strict Checks
        "alwaysStrict": true, // Ensures that your files are parsed in the ECMAScript strict mode, and emit “use strict” for each source file.
        "allowUnreachableCode": false, // pick up dead code paths
        "noImplicitAny": true, // In some cases where no type annotations are present, TypeScript will fall back to a type of any for a variable when it cannot infer the type.
        "strictNullChecks": true, // When strictNullChecks is true, null and undefined have their own distinct types and you’ll get a type error if you try to use them where a concrete value is expected.
        "allowJs": true,
        // Linter Checks
        "noImplicitReturns": true,
        "noUncheckedIndexedAccess": true, // accessing index must always check for undefined
        "noUnusedLocals": false, // Report errors on unused local variables.
        "noUnusedParameters": false, // Report errors on unused parameters in functions
        "declaration": true,
        "checkJs": false,
        "skipLibCheck": true,
        "jsx": "react"

        // "reso"
    },
    "include": ["./src/**/*.ts", "./src/**/*.tsx", "./src/**/*.css"],
    // "types":"./src/libv86.js",
    // "typeAcquisition": {"enable": true},
    "exclude": ["/**/node_modules/**/*"]
}
